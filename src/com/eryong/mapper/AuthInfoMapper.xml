<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.eryong.dao.AuthInfoDao">
  
 
  <!-- 通过权限id集合和parentId获得权限信息集合 -->
  <select id="getAuthInfoAuthIdAndRoleAuthIdList" parameterType="Map" resultType="AuthInfo">    
    SELECT `t_erp_auth`.* FROM `t_erp_auth`
    WHERE parentId = #{parentId} 
    and authDelflag = 0
    AND authId 
    IN
    <foreach collection="authIds" item="authId" separator="," open="(" close=")">
    	#{authId}
    </foreach>
  </select> 
     
  <select id="getAuthInfoByParentId"  parameterType="Integer" resultType="AuthInfo">
  	SELECT 
  	`t_erp_auth`.*,`t_erp_user`.`userName`optName 
  	FROM 
  	`t_erp_auth`LEFT JOIN `t_erp_user`
  	ON 
  	`t_erp_auth`.`optId`=`t_erp_user`.`userId`
    WHERE parentId = #{parentId} 
    and   authDelflag = 0  
  </select>
  
  <!-- 判断当前用户是否有子权限 -->
  <select id="hasChildernUser"  parameterType="Map" resultType="Integer">  
    SELECT count(0) FROM `t_erp_auth`
    WHERE parentId = #{parentId}
    and 
    	authDelflag = 0
    and
    	authId in  
    <foreach collection="authIdList" item="authId" separator="," open="(" close=")">    
    	#{authId}   
    </foreach>  
  </select>
  
  <!-- 判断当前权限是否有子权限 -->
  <select id="hasChildernAuth"  parameterType="Integer" resultType="Integer">  
    SELECT count(0) FROM `t_erp_auth`
    WHERE 
    	parentId = #{parentId} 
    and 
    	authDelflag = 0      
  </select>
  
  <!-- 添加权限 -->
  
  <insert id="addAuthInfo" parameterType="AuthInfo">
  
  insert into
  		t_erp_auth
  		(authName,
  		authPath,
  		parentId,
  		authDescription,
  		state,
  		
  		authDelflag,
  		currentTime,
  		optId
  		)
  	values
  		(#{authName},
  		#{authPath},
  		#{parentId},
  		#{authDescription},
  		'close',  		
  		0,
  		#{currentTime},
  		#{optId}
  		)
  
  </insert>
  <update id="updateAuthInfo" parameterType="AuthInfo">
  		update
  			t_erp_auth
  		set
  			authName=#{authName},
  			authDescription=#{authDescription}
  		where
  			authId=#{authId} 
  </update>
  
  <update id="deleteAuthInfoById" parameterType="Integer">
  	update 
  		t_erp_auth 
  	set 
  		authDelflag=1
  	where
  		authId=#{authId};
  </update>
  
  <update id="deleteAuthInfoByPid" parameterType="Integer">
  	update 
  		t_erp_auth 
  	set 
  		authDelflag=1
  	where
  		parentId=#{authId};
  </update>
</mapper>